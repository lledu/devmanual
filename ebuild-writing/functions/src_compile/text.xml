<?xml version="1.0"?>
<guide self="ebuild-writing/functions/src_compile/">
<chapter>
<title>函数src_compile</title>

<body>
<table>
  <tr>
    <th>函数名称</th>
    <ti><c>src_compile</c></ti>
  </tr>
  <tr>
    <th>意义</th>
    <ti>(配置)编译函数.<important>函数<c>src_compile</c>中的配置部分功能在EAPI=2的规约中已经分离给函数<c>src_configure</c>.详见<uri link="::ebuild-writing/functions/src_configure"/></important></ti>
  </tr>
  <tr>
    <th>Sandbox</th>
    <ti>开启</ti>
  </tr>
  <tr>
    <th>所需权限</th>
    <ti>user</ti>
  </tr>
  <tr>
    <th>被谁调用</th>
    <ti>ebuild</ti>
  </tr>
</table>
</body>

<section>
<title>默认<c>src_compile</c></title>
<body>
<subsection>
<title>配合EAPI=0,1</title>
<body>
<codesample lang="ebuild">
src_compile() {
    if [ -x ./configure ]; then
        econf
    fi
    if [ -f Makefile ] || [ -f GNUmakefile ] || [ -f makefile ]; then
        emake || die "emake failed"
    fi
}
</codesample>
</body>
</subsection>
<subsection>
<title>配合EAPI=2</title>
<body>
<codesample lang="ebuild">
src_compile() {
    if [ -f Makefile ] || [ -f GNUmakefile ] || [ -f makefile ]; then
        emake || die "emake failed"
    fi
}
</codesample>
</body>
</subsection>
</body>
</section>

<section>
<title>实例<c>src_compile</c></title>
<body>
<subsection>
<title>配合EAPI=0</title>
<body>
<codesample lang="ebuild">
src_compile() {
    use sparc &amp;&amp; filter-flags -fomit-frame-pointer
    append-ldflags -Wl,-z,now

    econf \
        $(use_enable ssl ) \
        $(use_enable perl perlinterp )

    emake || die "Make failed!"
}
</codesample>
<note>
您也需要声明inherit该<uri link="::eclass-reference/flag-o-matic.eclass/">flag-o-matic</uri> eclass,为了使用<c>append-ldflags</c>函数.
</note>
</body>
</subsection>
<subsection>
<title>配合EAPI=2</title>
<body>
<p>
将上例换在EAPI=2规约中,将不需要再定义额外的
<c>src_compile</c>,因为它只调用<c>emake</c> (它是
<c>src_compile</c>函数中默认的).
</p>
</body>
</subsection>
</body>
</section>

<section>
<title><c>src_compile</c>进程</title>
<body>
<p>
接下来的小节将讲述使用<c>src_compile</c>函数时可能遇到的问题.
</p>

<contentsTree/>
</body>
</section>

</chapter>

<include href="build-environment/"/>
<!--<include href="configuring/"/>-->
<include href="building/"/>
<include href="distutils/"/>
<include href="no-build-system/"/>
</guide>
