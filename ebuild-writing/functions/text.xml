<?xml version="1.0"?>
<guide self="ebuild-writing/functions/">
<chapter>
<title>Ebuild 函数篇</title>

<body>
<p>
当自源码安装软件包时，系统调用函数的顺序是 <c>pkg_setup</c>,
<c>src_unpack</c>, <c>src_prepare</c>, <c>src_compile</c>, <c>src_test</c> (可选项为, <c>FEATURES="test"</c>),
<c>src_install</c>, <c>pkg_preinst</c>, <c>pkg_postinst</c>. 当安装的是二进制的软件包时，系统调用的顺序是 <c>pkg_setup</c>, <c>pkg_preinst</c>,
<c>pkg_postinst</c>.
有些之前没有介绍到的相关信息，阅读下篇
<uri link="::ebuild-writing/eapi"/> 可获有关EAPI规约的梗概.
</p>

<figure short="How the ebuild functions are processed" link="diagram.png"/>

<p>
当卸载软件包时会调用函数 <c>pkg_prerm</c> 和 <c>pkg_postrm</c> 
. 使用函数 <c>pkg_config</c> 为软件包做
configuration <d/> 用户有实际需求时需要预先手动配置运行. 函数
<c>pkg_nofetch</c> 在以下情况会被调用，即当标记有 <c>RESTRICT="fetch"</c> 的软件包（标示有“限制取回”的软件包）包含有 <c>SRC_URI</c> 参数时.
</p>

<p>
在由函数 <c>pkg_preinst</c> 向函数 <c>pkg_postinst</c> 切换的过程中, 相关的文件由沙盒中被安装到现行的系统中，此时Portage 将会记录文件安装的细节。
</p>

<p>
当需要测试或排错时，可以命令Portage只针对一个 ebuild 文件运行
 <c>ebuild</c> 命令, 详见 <c>ebuild(1)</c> 更详细的手册说明.
</p>
</body>

<section>
<title>目录</title>
<body>
<contentsTree/>
</body>
</section>
</chapter>

<include href="pkg_pretend/"/>
<include href="pkg_nofetch/"/>
<include href="pkg_setup/"/>
<include href="src_unpack/"/>
<include href="src_prepare/"/>
<include href="src_configure/"/>
<include href="src_compile/"/>
<include href="src_test/"/>
<include href="src_install/"/>
<include href="pkg_preinst/"/>
<include href="pkg_postinst/"/>
<include href="pkg_prerm/"/>
<include href="pkg_postrm/"/>
<include href="pkg_config/"/>
<include href="pkg_info/"/>
</guide>
