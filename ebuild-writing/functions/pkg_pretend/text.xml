<?xml version="1.0"?>
<guide self="ebuild-writing/functions/pkg_pretend/">
<chapter>
<title>函数pkg_pretend</title>

<body>
<table>
  <tr>
    <th>函数名</th>
    <ti><c>pkg_pretend</c></ti>
  </tr>
  <tr>
    <th>意义</th>
    <ti>在系统进行依赖性运算时，常规检测一下软件包</ti>
  </tr>
  <tr>
    <th>Sandbox</th>
    <ti>?</ti>
  </tr>
  <tr>
    <th>所需权限</th>
    <ti>root</ti>
  </tr>
  <tr>
    <th>被谁调用</th>
    <ti>ebuild</ti>
  </tr>
  <tr>
    <th>EAPI规约</th>
    <ti>3</ti>
  </tr>
</table>
</body>

<section>
<title>默认的 <c>pkg_pretend</c></title>
<body>
<codesample lang="ebuild">
pkg_pretend()
{
    return
}
</codesample>
</body>
</section>

<section>
<title>实例 <c>pkg_pretend</c></title>
<body>
<codesample lang="ebuild">
pkg_pretend() {
	if use kernel_linux ; then
		if [[ -e "${ROOT}"/usr/src/linux/.config ]] ; then
			if kernel_is lt 2 6 30 ; then
				CONFIG_CHECK="FUSE_FS"
				FUSE_FS_ERROR="this is an unrealistic testcase..."
				check_extra_config
			fi
		fi
	fi
}
</codesample>
</body>
</section>

<section>
<title>函数<c>pkg_pretend的相关注意事项</c></title>
<body>
<p>
该函数<c>pkg_pretend</c>在主函数运行前做一些常规的检测(意味着它运行在系统计算依赖性检测，
准备安装它们之前).
如它会常规检测kernel的configuration及必要是调用
<c>eerror</c> 和 <c>die</c> .
<important>
	该函数被调用时尚且不能保证软件包所有的依赖都能正确的安装。
</important>
<important>
	因为函数<c>pkg_pretend</c> 不会在主函数中调用，相关的环境变量常不能保证正常保存。
</important>
</p>
</body>
</section>

</chapter>
</guide>
