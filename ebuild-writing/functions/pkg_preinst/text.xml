<?xml version="1.0"?>
<guide self="ebuild-writing/functions/pkg_preinst/">
<chapter>
<title>函数pkg_preinst</title>

<body>
<table>
  <tr>
    <th>函数名</th>
    <ti><c>pkg_preinst</c></ti>
  </tr>
  <tr>
    <th>意义</th>
    <ti>在软件包的被安装到<c>${ROOT}</c>之前被调用</ti>
  </tr>
  <tr>
    <th>Sandbox</th>
    <ti>关闭</ti>
  </tr>
  <tr>
    <th>所需权限</th>
    <ti>root</ti>
  </tr>
  <tr>
    <th>被谁调用</th>
    <ti>ebuild, binary</ti>
  </tr>
</table>
</body>

<section>
<title>默认的 <c>pkg_preinst</c></title>
<body>
<codesample lang="ebuild">
pkg_preinst()
{
    return
}
</codesample>
</body>
</section>

<section>
<title>实例 <c>pkg_preinst</c></title>
<body>
<codesample lang="ebuild">
pkg_preinst() {
    enewgroup foo
    enewuser foo -1 /bin/false /dev/null foo
}
</codesample>
</body>
</section>

<section>
<title>函数<c>pkg_preinst</c> 通常用途</title>
<body>
<p>
有相当一些事情常常在函数<c>pkg_preinst</c>中来做:
</p>

<ul>
  <li>
  添加用户和用户组。但因为函数<c>pkg_preinst</c>有可能在 
  <c>src_compile</c>之后调用, 在函数<c>pkg_setup</c>处似乎是更适合用来添加用户的位置
  <d/> 详见 <uri link="::ebuild-writing/users-and-groups"/>.
  </li>
  <li>
  针对某一系统而调整相关安装文件. 它
  允许为系统做出一些自定义的调整，同样二进制包在被安装时也可以。
  最常用的一招就是灵活地调整一些配置文件<d/>函数<c>pkg_preinst</c>能检测
  存在于<c>${ROOT}/etc/</c>的配置文件，并在<c>${D}/etc/</c>目录中创建一些更新的版本 (详见
  <uri link="::general-concepts/install-destinations"/>) 而不是
  每次都安装默认的配置文件 (记得看
  <uri link="::general-concepts/config-protect"/>这篇文章哦).
  </li>
</ul>
</body>
</section>

</chapter>
</guide>
